name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  unit-test:
    name: Run Unit Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Install dependencies
        run: go mod tidy

      - name: Run Makefile
        run: make
        working-directory: .

      - name: Run tests
        run: go test ./handlers/group/... ./services/group/... ./repositories/group/... ./functions/...

  integration-tests:
    name: Run Integration Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Install dependencies
        run: go mod tidy

      - name: Start Docker service
        if: runner.os == 'Linux'
        run: sudo systemctl start docker

      - name: Install Docker Compose
        if: runner.os == 'Linux'
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.32.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Start Services
        run: docker-compose up -d mongo
        if: runner.os == 'Linux'

      - name: Wait for services
        run: |
          while ! nc -z localhost 27017; do
            echo "Waiting for MongoDB...";
            sleep 2;
          done

      - name: Run Integration Tests
        run: go test -v ./integration_tests/...
